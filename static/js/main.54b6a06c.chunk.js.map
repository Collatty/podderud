{"version":3,"sources":["CustomNavBar.tsx","headerContainer.tsx","AllPodcasts.tsx","Person/Person.tsx","Person/info.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["CustomNavBar","bg","expand","sticky","Brand","href","Toggle","aria-controls","Collapse","id","className","title","Item","Divider","HeaderContainer","AllPodcasts","style","width","margin","src","height","scrolling","frameBorder","allow","Person","props","name","Img","variant","imgUrl","Body","Title","age","Text","info","cookingPercentage","hobbies","codStats","people","App","textAlign","map","person","i","key","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.54b6a06c.chunk.js","sourcesContent":["import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\n\nconst CustomNavBar: React.FC = () => {\n  return (\n    <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\">\n      <Navbar.Brand href=\"#home\">PODDERUD</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <NavDropdown title=\"Bæsj\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item>Bæsj</NavDropdown.Item>\n            <NavDropdown.Item>Mer bæsj</NavDropdown.Item>\n            <NavDropdown.Item>Enda mer bæsj</NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item>Bæsjen over alle bæsjer</NavDropdown.Item>\n          </NavDropdown>\n        </Nav>\n        <Nav className=\"mr-right\">\n          <NavDropdown title=\"Om Oss\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item href=\"#Håkon\">Håkon</NavDropdown.Item>\n            <NavDropdown.Item href=\"#Eirik\">Eirik</NavDropdown.Item>\n            <NavDropdown.Item href=\"#Toralf\">Toralf</NavDropdown.Item>\n            <NavDropdown.Item href=\"#Theo\">Theodor</NavDropdown.Item>\n            <NavDropdown.Item href=\"#7 Ball\">7 Ball</NavDropdown.Item>\n          </NavDropdown>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default CustomNavBar;\n","import React from \"react\";\nimport CustomNavBar from \"./CustomNavBar\";\nconst HeaderContainer: React.FC = () => {\n  return <CustomNavBar />;\n};\n\nexport default HeaderContainer;\n","import React from \"react\";\n\nconst AllPodcasts: React.FC = () => {\n  return (\n    <div\n      className=\"shadow-lg p-3 mb-5 bg-white rounded\"\n      style={{\n        width: \"80%\",\n        margin: \"10px auto\"\n      }}\n    >\n      <iframe\n        title=\"p50\"\n        src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/685063330&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true&visual=true\"\n        width=\"100%\"\n        height=\"300\"\n        scrolling=\"no\"\n        frameBorder=\"yes\"\n        allow=\"autoplay\"\n      />\n    </div>\n  );\n};\nexport default AllPodcasts;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\";\n\nimport \"./Person.css\";\n\ninterface PersonProps {\n  name: string;\n  imgUrl: string;\n  age: number;\n  info: string;\n  cookingPercentage: string;\n  hobbies: string;\n  codStats: string;\n}\n\nconst Person: React.FC<PersonProps> = props => {\n  return (\n    <div className=\"person\" id={props.name}>\n      <Card>\n        <Card.Img variant=\"top\" src={props.imgUrl} />\n        <Card.Body>\n          <Card.Title>{props.name + \", \" + props.age + \" år\"}</Card.Title>\n          <Card.Text>{props.info}</Card.Text>\n        </Card.Body>\n        <ListGroup className=\"list-group-flush\">\n          <ListGroupItem>{`Kokeprosent: ${props.cookingPercentage} %`}</ListGroupItem>\n          <ListGroupItem>{`Hobbyer: ${props.hobbies}`}</ListGroupItem>\n          <ListGroupItem>{`COD-stats: ${props.codStats}`}</ListGroupItem>\n        </ListGroup>\n      </Card>\n    </div>\n  );\n};\n\nexport default Person;\n","const people = [\n  {\n    name: \"Eirik\",\n    imgUrl:\n      \"https://scontent.fosl3-1.fna.fbcdn.net/v/t1.0-9/37755952_10216795753156815_3590396083097829376_n.jpg?_nc_cat=110&_nc_oc=AQkALayNSuf6NWiMlmQyu3EV8y2mTx54-3_AKWDR0zMkGla88jJ3KZ-ApL7IQFUbwBQ&_nc_ht=scontent.fosl3-1.fna&oh=36e811bdf95991839b27bbc09b374a5c&oe=5DF31742\",\n    age: 22,\n    info: \"<3 #L-wood <3 Lørenskog born and raised. \",\n    cookingPercentage: \"69\",\n    hobbies:\n      \"Jobber hele tiden for å holde antall verv tosifret. Også sjukt god på å tegne strekmenn.\",\n    codStats: \"One man army noob tube\"\n  },\n  {\n    name: \"Håkon\",\n    imgUrl:\n      \"https://scontent.fosl3-1.fna.fbcdn.net/v/t1.0-9/31649313_10157896217162228_6304937663512058134_n.jpg?_nc_cat=107&_nc_oc=AQmplb-U1T4jGrkDxOlgIfwyXbDObM6GJegp4k-oWm326__ZuZavO7Xh579KLWsyOL0&_nc_ht=scontent.fosl3-1.fna&oh=24cd531b2ae92b2c3e538c7606975821&oe=5DFB8796\",\n    age: 32,\n    info: \"Har lest 1,5 bøker i 2019.\",\n    cookingPercentage: \"nice\",\n    hobbies: \"Piano, sjakk, 03\",\n    codStats: \"Quick-scope battle på rust er det jeg har gjort mest av i livet\"\n  },\n  {\n    name: \"Toralf\",\n    imgUrl:\n      \"https://scontent.fosl3-1.fna.fbcdn.net/v/t1.0-9/12366421_1216696991680003_4415355327421991323_n.jpg?_nc_cat=110&_nc_oc=AQntJPlYA88r3euT2ts9VuLl2cHKvpMR6NpG9M1rnzLNPh2iEmc4A7ghbKG754NJfcg&_nc_ht=scontent.fosl3-1.fna&oh=aba03eced005f8a8b0e4bd49a75f058e&oe=5DFA07A4\",\n    age: 32,\n    info:\n      \"Nei, det er ikke så jævlig kaldt her oppe. Det blåser heller ikke mer. \",\n    cookingPercentage: \"92\",\n    hobbies:\n      \"Undass i proglab 2. Det tar mesteparten av tiden min, siden jeg gjør øvingene selv for første gang.\",\n    codStats: \"Camper\"\n  },\n  {\n    name: \"Theo\",\n    imgUrl:\n      \"https://scontent.fosl3-1.fna.fbcdn.net/v/t1.0-9/13237809_1022131947840092_4985005381529213756_n.jpg?_nc_cat=108&_nc_oc=AQlHHugGVKbqgHYlRnNQUoy38c7nTt8sVPXtXE98aIdVNul2z8WK3dg84gKAESRE8sk&_nc_ht=scontent.fosl3-1.fna&oh=e8a4a7983b6af341346c38379a68fcd6&oe=5DFB0928\",\n    age: 32,\n    info:\n      \"Har ikke spist wienerpølse siden 17. mai 2005 da jeg fikk nesten en hel en i vrangstrupen.\",\n    cookingPercentage: \"23\",\n    hobbies: \"Ro båt.\",\n    codStats: \"Sensitivity 2, SCAR med heartbeat monitor og acog. \"\n  },\n  {\n    name: \"7 Ball\",\n    imgUrl:\n      \"https://brittarnhildshouseinthewoods.typepad.com/.a/6a00d8341bf74c53ef022ad3551605200c-500wi\",\n    age: 7,\n    info: \"Har dratt den siden tidenes morgen\",\n    cookingPercentage: \"7\",\n    hobbies: 'Dra roten og dra \"roten\". Høhø. ',\n    codStats: \"360 noscope shotgun flip\"\n  }\n];\n\nexport default people;\n","import React from \"react\";\nimport HeaderContainer from \"./headerContainer\";\nimport AllPodcasts from \"./AllPodcasts\";\nimport Person from \"./Person/Person\";\nimport people from \"./Person/info\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\" style={{ textAlign: \"center\" }}>\n      <HeaderContainer />\n      <AllPodcasts />\n      {people.map((person, i) => {\n        return (\n          <Person\n            key={i}\n            name={person.name}\n            age={person.age}\n            imgUrl={person.imgUrl}\n            info={person.info}\n            cookingPercentage={person.cookingPercentage}\n            codStats={person.codStats}\n            hobbies={person.hobbies}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}